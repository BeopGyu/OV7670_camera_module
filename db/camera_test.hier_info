|camera_test
clk => clk.IN4
rst_n => rst_n.IN3
key[0] => key[0].IN1
key[1] => key[1].IN1
key[2] => key[2].IN1
key[3] => key[3].IN1
cmos_pclk => cmos_pclk.IN1
cmos_href => cmos_href.IN1
cmos_vsync => cmos_vsync.IN1
cmos_db[0] => cmos_db[0].IN1
cmos_db[1] => cmos_db[1].IN1
cmos_db[2] => cmos_db[2].IN1
cmos_db[3] => cmos_db[3].IN1
cmos_db[4] => cmos_db[4].IN1
cmos_db[5] => cmos_db[5].IN1
cmos_db[6] => cmos_db[6].IN1
cmos_db[7] => cmos_db[7].IN1
cmos_sda <> camera_interface:m0.cmos_sda
cmos_scl <> camera_interface:m0.cmos_scl
cmos_rst_n << camera_interface:m0.cmos_rst_n
cmos_pwdn << camera_interface:m0.cmos_pwdn
cmos_xclk << camera_interface:m0.cmos_xclk
ledt[0] << camera_interface:m0.led
ledt[1] << camera_interface:m0.led
ledt[2] << camera_interface:m0.led
ledt[3] << camera_interface:m0.led
ledtt << vga_interface:m2.vga_out_r
sdram_clk << clk_sdram.DB_MAX_OUTPUT_PORT_TYPE
sdram_cke << sdram_interface:m1.sdram_cke
sdram_cs_n << sdram_interface:m1.sdram_cs_n
sdram_ras_n << sdram_interface:m1.sdram_ras_n
sdram_cas_n << sdram_interface:m1.sdram_cas_n
sdram_we_n << sdram_interface:m1.sdram_we_n
sdram_addr[0] << sdram_interface:m1.sdram_addr
sdram_addr[1] << sdram_interface:m1.sdram_addr
sdram_addr[2] << sdram_interface:m1.sdram_addr
sdram_addr[3] << sdram_interface:m1.sdram_addr
sdram_addr[4] << sdram_interface:m1.sdram_addr
sdram_addr[5] << sdram_interface:m1.sdram_addr
sdram_addr[6] << sdram_interface:m1.sdram_addr
sdram_addr[7] << sdram_interface:m1.sdram_addr
sdram_addr[8] << sdram_interface:m1.sdram_addr
sdram_addr[9] << sdram_interface:m1.sdram_addr
sdram_addr[10] << sdram_interface:m1.sdram_addr
sdram_addr[11] << sdram_interface:m1.sdram_addr
sdram_addr[12] << sdram_interface:m1.sdram_addr
sdram_ba[0] << sdram_interface:m1.sdram_ba
sdram_ba[1] << sdram_interface:m1.sdram_ba
sdram_dqm[0] << sdram_interface:m1.sdram_dqm
sdram_dqm[1] << sdram_interface:m1.sdram_dqm
sdram_dq[0] <> sdram_interface:m1.sdram_dq
sdram_dq[1] <> sdram_interface:m1.sdram_dq
sdram_dq[2] <> sdram_interface:m1.sdram_dq
sdram_dq[3] <> sdram_interface:m1.sdram_dq
sdram_dq[4] <> sdram_interface:m1.sdram_dq
sdram_dq[5] <> sdram_interface:m1.sdram_dq
sdram_dq[6] <> sdram_interface:m1.sdram_dq
sdram_dq[7] <> sdram_interface:m1.sdram_dq
sdram_dq[8] <> sdram_interface:m1.sdram_dq
sdram_dq[9] <> sdram_interface:m1.sdram_dq
sdram_dq[10] <> sdram_interface:m1.sdram_dq
sdram_dq[11] <> sdram_interface:m1.sdram_dq
sdram_dq[12] <> sdram_interface:m1.sdram_dq
sdram_dq[13] <> sdram_interface:m1.sdram_dq
sdram_dq[14] <> sdram_interface:m1.sdram_dq
sdram_dq[15] <> sdram_interface:m1.sdram_dq
vga_out_r[0] << vga_interface:m2.vga_out_r
vga_out_r[1] << vga_interface:m2.vga_out_r
vga_out_r[2] << vga_interface:m2.vga_out_r
vga_out_r[3] << vga_interface:m2.vga_out_r
vga_out_r[4] << vga_interface:m2.vga_out_r
vga_out_g[0] << vga_interface:m2.vga_out_g
vga_out_g[1] << vga_interface:m2.vga_out_g
vga_out_g[2] << vga_interface:m2.vga_out_g
vga_out_g[3] << vga_interface:m2.vga_out_g
vga_out_g[4] << vga_interface:m2.vga_out_g
vga_out_g[5] << vga_interface:m2.vga_out_g
vga_out_b[0] << vga_interface:m2.vga_out_b
vga_out_b[1] << vga_interface:m2.vga_out_b
vga_out_b[2] << vga_interface:m2.vga_out_b
vga_out_b[3] << vga_interface:m2.vga_out_b
vga_out_b[4] << vga_interface:m2.vga_out_b
vga_out_vs << vga_interface:m2.vga_out_vs
vga_out_hs << vga_interface:m2.vga_out_hs
vga_out_bl << vga_interface:m2.vga_out_bl
vga_out_sy << vga_interface:m2.vga_out_sy
clk_out << dcm_25MHz:m4.c0


|camera_test|camera_interface:m0
clk => clk.IN1
clk_100 => clk_100.IN7
rst_n => rst_n.IN6
key[0] => _.IN1
key[1] => _.IN1
key[2] => _.IN1
key[3] => _.IN1
rd_en => rd_en.IN1
data_count_r[0] <= asyn_fifo:m2.data_count_r
data_count_r[1] <= asyn_fifo:m2.data_count_r
data_count_r[2] <= asyn_fifo:m2.data_count_r
data_count_r[3] <= asyn_fifo:m2.data_count_r
data_count_r[4] <= asyn_fifo:m2.data_count_r
data_count_r[5] <= asyn_fifo:m2.data_count_r
data_count_r[6] <= asyn_fifo:m2.data_count_r
data_count_r[7] <= asyn_fifo:m2.data_count_r
data_count_r[8] <= asyn_fifo:m2.data_count_r
data_count_r[9] <= asyn_fifo:m2.data_count_r
dout[0] <= asyn_fifo:m2.data_read
dout[1] <= asyn_fifo:m2.data_read
dout[2] <= asyn_fifo:m2.data_read
dout[3] <= asyn_fifo:m2.data_read
dout[4] <= asyn_fifo:m2.data_read
dout[5] <= asyn_fifo:m2.data_read
dout[6] <= asyn_fifo:m2.data_read
dout[7] <= asyn_fifo:m2.data_read
dout[8] <= asyn_fifo:m2.data_read
dout[9] <= asyn_fifo:m2.data_read
dout[10] <= asyn_fifo:m2.data_read
dout[11] <= asyn_fifo:m2.data_read
dout[12] <= asyn_fifo:m2.data_read
dout[13] <= asyn_fifo:m2.data_read
dout[14] <= asyn_fifo:m2.data_read
dout[15] <= asyn_fifo:m2.data_read
cmos_pclk => pclk_1.DATAIN
cmos_href => href_1.DATAIN
cmos_vsync => vsync_1.DATAIN
cmos_db[0] => pixel_d.DATAB
cmos_db[0] => pixel_d.DATAB
cmos_db[1] => pixel_d.DATAB
cmos_db[1] => pixel_d.DATAB
cmos_db[2] => pixel_d.DATAB
cmos_db[2] => pixel_d.DATAB
cmos_db[3] => pixel_d.DATAB
cmos_db[3] => pixel_d.DATAB
cmos_db[4] => pixel_d.DATAB
cmos_db[4] => pixel_d.DATAB
cmos_db[5] => pixel_d.DATAB
cmos_db[5] => pixel_d.DATAB
cmos_db[6] => pixel_d.DATAB
cmos_db[6] => pixel_d.DATAB
cmos_db[7] => pixel_d.DATAB
cmos_db[7] => pixel_d.DATAB
cmos_sda <> i2c_top:m0.sda
cmos_scl <> i2c_top:m0.scl
cmos_rst_n <= <VCC>
cmos_pwdn <= <GND>
cmos_xclk <= dcm_24MHz:m1.c0
led[0] <= led_q[0].DB_MAX_OUTPUT_PORT_TYPE
led[1] <= led_q[1].DB_MAX_OUTPUT_PORT_TYPE
led[2] <= led_q[2].DB_MAX_OUTPUT_PORT_TYPE
led[3] <= led_q[3].DB_MAX_OUTPUT_PORT_TYPE


|camera_test|camera_interface:m0|i2c_top:m0
clk => rd_data_q[0].CLK
clk => rd_data_q[1].CLK
clk => rd_data_q[2].CLK
clk => rd_data_q[3].CLK
clk => rd_data_q[4].CLK
clk => rd_data_q[5].CLK
clk => rd_data_q[6].CLK
clk => rd_data_q[7].CLK
clk => counter_q[0].CLK
clk => counter_q[1].CLK
clk => counter_q[2].CLK
clk => counter_q[3].CLK
clk => counter_q[4].CLK
clk => counter_q[5].CLK
clk => counter_q[6].CLK
clk => counter_q[7].CLK
clk => counter_q[8].CLK
clk => sda_q.CLK
clk => scl_q.CLK
clk => wr_data_q[0].CLK
clk => wr_data_q[1].CLK
clk => wr_data_q[2].CLK
clk => wr_data_q[3].CLK
clk => wr_data_q[4].CLK
clk => wr_data_q[5].CLK
clk => wr_data_q[6].CLK
clk => wr_data_q[7].CLK
clk => wr_data_q[8].CLK
clk => idx_q[0].CLK
clk => idx_q[1].CLK
clk => idx_q[2].CLK
clk => idx_q[3].CLK
clk => start_q.CLK
clk => state_q~1.DATAIN
rst_n => rd_data_q[0].ACLR
rst_n => rd_data_q[1].ACLR
rst_n => rd_data_q[2].ACLR
rst_n => rd_data_q[3].ACLR
rst_n => rd_data_q[4].ACLR
rst_n => rd_data_q[5].ACLR
rst_n => rd_data_q[6].ACLR
rst_n => rd_data_q[7].ACLR
rst_n => counter_q[0].ACLR
rst_n => counter_q[1].ACLR
rst_n => counter_q[2].ACLR
rst_n => counter_q[3].ACLR
rst_n => counter_q[4].ACLR
rst_n => counter_q[5].ACLR
rst_n => counter_q[6].ACLR
rst_n => counter_q[7].ACLR
rst_n => counter_q[8].ACLR
rst_n => sda_q.ACLR
rst_n => scl_q.ACLR
rst_n => wr_data_q[0].ACLR
rst_n => wr_data_q[1].ACLR
rst_n => wr_data_q[2].ACLR
rst_n => wr_data_q[3].ACLR
rst_n => wr_data_q[4].ACLR
rst_n => wr_data_q[5].ACLR
rst_n => wr_data_q[6].ACLR
rst_n => wr_data_q[7].ACLR
rst_n => wr_data_q[8].ACLR
rst_n => idx_q[0].ACLR
rst_n => idx_q[1].ACLR
rst_n => idx_q[2].ACLR
rst_n => idx_q[3].ACLR
rst_n => start_q.ACLR
rst_n => state_q~3.DATAIN
start => wr_data_d.OUTPUTSELECT
start => wr_data_d.OUTPUTSELECT
start => wr_data_d.OUTPUTSELECT
start => wr_data_d.OUTPUTSELECT
start => wr_data_d.OUTPUTSELECT
start => wr_data_d.OUTPUTSELECT
start => wr_data_d.OUTPUTSELECT
start => wr_data_d.OUTPUTSELECT
start => wr_data_d.OUTPUTSELECT
start => start_d.OUTPUTSELECT
start => idx_d.OUTPUTSELECT
start => idx_d.OUTPUTSELECT
start => idx_d.OUTPUTSELECT
start => idx_d.OUTPUTSELECT
start => state_d.OUTPUTSELECT
start => state_d.OUTPUTSELECT
start => state_d.OUTPUTSELECT
start => state_d.OUTPUTSELECT
start => state_d.OUTPUTSELECT
start => state_d.OUTPUTSELECT
start => state_d.OUTPUTSELECT
start => state_d.OUTPUTSELECT
start => state_d.OUTPUTSELECT
start => start_d.DATAA
start => start_d.DATAB
start => start_d.OUTPUTSELECT
start => state_d.DATAA
start => state_d.DATAA
stop => state_d.OUTPUTSELECT
stop => state_d.OUTPUTSELECT
stop => start_d.OUTPUTSELECT
stop => idx_d.OUTPUTSELECT
stop => idx_d.OUTPUTSELECT
stop => idx_d.OUTPUTSELECT
stop => idx_d.OUTPUTSELECT
stop => state_d.OUTPUTSELECT
stop => state_d.OUTPUTSELECT
stop => start_d.OUTPUTSELECT
stop => state_d.DATAB
stop => state_d.DATAB
wr_data[0] => wr_data_d.DATAB
wr_data[0] => wr_data_d.DATAB
wr_data[0] => start_d.DATAB
wr_data[1] => wr_data_d.DATAB
wr_data[1] => wr_data_d.DATAB
wr_data[2] => wr_data_d.DATAB
wr_data[2] => wr_data_d.DATAB
wr_data[3] => wr_data_d.DATAB
wr_data[3] => wr_data_d.DATAB
wr_data[4] => wr_data_d.DATAB
wr_data[4] => wr_data_d.DATAB
wr_data[5] => wr_data_d.DATAB
wr_data[5] => wr_data_d.DATAB
wr_data[6] => wr_data_d.DATAB
wr_data[6] => wr_data_d.DATAB
wr_data[7] => wr_data_d.DATAB
wr_data[7] => wr_data_d.DATAB
rd_tick <= rd_tick.DB_MAX_OUTPUT_PORT_TYPE
ack[0] <= ack.DB_MAX_OUTPUT_PORT_TYPE
ack[1] <= ack.DB_MAX_OUTPUT_PORT_TYPE
rd_data[0] <= rd_data_q[0].DB_MAX_OUTPUT_PORT_TYPE
rd_data[1] <= rd_data_q[1].DB_MAX_OUTPUT_PORT_TYPE
rd_data[2] <= rd_data_q[2].DB_MAX_OUTPUT_PORT_TYPE
rd_data[3] <= rd_data_q[3].DB_MAX_OUTPUT_PORT_TYPE
rd_data[4] <= rd_data_q[4].DB_MAX_OUTPUT_PORT_TYPE
rd_data[5] <= rd_data_q[5].DB_MAX_OUTPUT_PORT_TYPE
rd_data[6] <= rd_data_q[6].DB_MAX_OUTPUT_PORT_TYPE
rd_data[7] <= rd_data_q[7].DB_MAX_OUTPUT_PORT_TYPE
scl <> scl
sda <> sda
state[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
state[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
state[3] <= state[3].DB_MAX_OUTPUT_PORT_TYPE


|camera_test|camera_interface:m0|dcm_24MHz:m1
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk


|camera_test|camera_interface:m0|dcm_24MHz:m1|altpll:altpll_component
inclk[0] => dcm_24MHz_altpll:auto_generated.inclk[0]
inclk[1] => dcm_24MHz_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|camera_test|camera_interface:m0|dcm_24MHz:m1|altpll:altpll_component|dcm_24MHz_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|camera_test|camera_interface:m0|asyn_fifo:m2
rst_n => full~reg0.ACLR
rst_n => w_ptr_q[0].ACLR
rst_n => w_ptr_q[1].ACLR
rst_n => w_ptr_q[2].ACLR
rst_n => w_ptr_q[3].ACLR
rst_n => w_ptr_q[4].ACLR
rst_n => w_ptr_q[5].ACLR
rst_n => w_ptr_q[6].ACLR
rst_n => w_ptr_q[7].ACLR
rst_n => w_ptr_q[8].ACLR
rst_n => w_ptr_q[9].ACLR
rst_n => w_ptr_q[10].ACLR
rst_n => empty~reg0.PRESET
rst_n => r_ptr_q[0].ACLR
rst_n => r_ptr_q[1].ACLR
rst_n => r_ptr_q[2].ACLR
rst_n => r_ptr_q[3].ACLR
rst_n => r_ptr_q[4].ACLR
rst_n => r_ptr_q[5].ACLR
rst_n => r_ptr_q[6].ACLR
rst_n => r_ptr_q[7].ACLR
rst_n => r_ptr_q[8].ACLR
rst_n => r_ptr_q[9].ACLR
rst_n => r_ptr_q[10].ACLR
rst_n => r_ptr_sync[10].ENA
rst_n => r_ptr_sync[9].ENA
rst_n => r_ptr_sync[8].ENA
rst_n => r_ptr_sync[7].ENA
rst_n => r_ptr_sync[6].ENA
rst_n => r_ptr_sync[5].ENA
rst_n => r_ptr_sync[4].ENA
rst_n => r_ptr_sync[3].ENA
rst_n => r_ptr_sync[2].ENA
rst_n => r_ptr_sync[1].ENA
rst_n => r_ptr_sync[0].ENA
rst_n => data_count_w[9]~reg0.ENA
rst_n => data_count_w[8]~reg0.ENA
rst_n => data_count_w[7]~reg0.ENA
rst_n => data_count_w[6]~reg0.ENA
rst_n => data_count_w[5]~reg0.ENA
rst_n => data_count_w[4]~reg0.ENA
rst_n => data_count_w[3]~reg0.ENA
rst_n => data_count_w[2]~reg0.ENA
rst_n => data_count_w[1]~reg0.ENA
rst_n => data_count_w[0]~reg0.ENA
rst_n => data_count_r[9]~reg0.ENA
rst_n => data_count_r[8]~reg0.ENA
rst_n => data_count_r[7]~reg0.ENA
rst_n => data_count_r[6]~reg0.ENA
rst_n => data_count_r[5]~reg0.ENA
rst_n => data_count_r[4]~reg0.ENA
rst_n => data_count_r[3]~reg0.ENA
rst_n => data_count_r[2]~reg0.ENA
rst_n => data_count_r[1]~reg0.ENA
rst_n => data_count_r[0]~reg0.ENA
clk_write => dual_port_sync:m0.clk_w
clk_write => r_grey_sync[0].CLK
clk_write => r_grey_sync[1].CLK
clk_write => r_grey_sync[2].CLK
clk_write => r_grey_sync[3].CLK
clk_write => r_grey_sync[4].CLK
clk_write => r_grey_sync[5].CLK
clk_write => r_grey_sync[6].CLK
clk_write => r_grey_sync[7].CLK
clk_write => r_grey_sync[8].CLK
clk_write => r_grey_sync[9].CLK
clk_write => r_grey_sync[10].CLK
clk_write => r_grey_sync_temp[0].CLK
clk_write => r_grey_sync_temp[1].CLK
clk_write => r_grey_sync_temp[2].CLK
clk_write => r_grey_sync_temp[3].CLK
clk_write => r_grey_sync_temp[4].CLK
clk_write => r_grey_sync_temp[5].CLK
clk_write => r_grey_sync_temp[6].CLK
clk_write => r_grey_sync_temp[7].CLK
clk_write => r_grey_sync_temp[8].CLK
clk_write => r_grey_sync_temp[9].CLK
clk_write => r_grey_sync_temp[10].CLK
clk_write => data_count_w[0]~reg0.CLK
clk_write => data_count_w[1]~reg0.CLK
clk_write => data_count_w[2]~reg0.CLK
clk_write => data_count_w[3]~reg0.CLK
clk_write => data_count_w[4]~reg0.CLK
clk_write => data_count_w[5]~reg0.CLK
clk_write => data_count_w[6]~reg0.CLK
clk_write => data_count_w[7]~reg0.CLK
clk_write => data_count_w[8]~reg0.CLK
clk_write => data_count_w[9]~reg0.CLK
clk_write => full~reg0.CLK
clk_write => w_ptr_q[0].CLK
clk_write => w_ptr_q[1].CLK
clk_write => w_ptr_q[2].CLK
clk_write => w_ptr_q[3].CLK
clk_write => w_ptr_q[4].CLK
clk_write => w_ptr_q[5].CLK
clk_write => w_ptr_q[6].CLK
clk_write => w_ptr_q[7].CLK
clk_write => w_ptr_q[8].CLK
clk_write => w_ptr_q[9].CLK
clk_write => w_ptr_q[10].CLK
clk_write => r_ptr_sync[0].CLK
clk_write => r_ptr_sync[1].CLK
clk_write => r_ptr_sync[2].CLK
clk_write => r_ptr_sync[3].CLK
clk_write => r_ptr_sync[4].CLK
clk_write => r_ptr_sync[5].CLK
clk_write => r_ptr_sync[6].CLK
clk_write => r_ptr_sync[7].CLK
clk_write => r_ptr_sync[8].CLK
clk_write => r_ptr_sync[9].CLK
clk_write => r_ptr_sync[10].CLK
clk_read => dual_port_sync:m0.clk_r
clk_read => w_grey_sync[0].CLK
clk_read => w_grey_sync[1].CLK
clk_read => w_grey_sync[2].CLK
clk_read => w_grey_sync[3].CLK
clk_read => w_grey_sync[4].CLK
clk_read => w_grey_sync[5].CLK
clk_read => w_grey_sync[6].CLK
clk_read => w_grey_sync[7].CLK
clk_read => w_grey_sync[8].CLK
clk_read => w_grey_sync[9].CLK
clk_read => w_grey_sync[10].CLK
clk_read => w_grey_sync_temp[0].CLK
clk_read => w_grey_sync_temp[1].CLK
clk_read => w_grey_sync_temp[2].CLK
clk_read => w_grey_sync_temp[3].CLK
clk_read => w_grey_sync_temp[4].CLK
clk_read => w_grey_sync_temp[5].CLK
clk_read => w_grey_sync_temp[6].CLK
clk_read => w_grey_sync_temp[7].CLK
clk_read => w_grey_sync_temp[8].CLK
clk_read => w_grey_sync_temp[9].CLK
clk_read => w_grey_sync_temp[10].CLK
clk_read => empty~reg0.CLK
clk_read => r_ptr_q[0].CLK
clk_read => r_ptr_q[1].CLK
clk_read => r_ptr_q[2].CLK
clk_read => r_ptr_q[3].CLK
clk_read => r_ptr_q[4].CLK
clk_read => r_ptr_q[5].CLK
clk_read => r_ptr_q[6].CLK
clk_read => r_ptr_q[7].CLK
clk_read => r_ptr_q[8].CLK
clk_read => r_ptr_q[9].CLK
clk_read => r_ptr_q[10].CLK
clk_read => data_count_r[0]~reg0.CLK
clk_read => data_count_r[1]~reg0.CLK
clk_read => data_count_r[2]~reg0.CLK
clk_read => data_count_r[3]~reg0.CLK
clk_read => data_count_r[4]~reg0.CLK
clk_read => data_count_r[5]~reg0.CLK
clk_read => data_count_r[6]~reg0.CLK
clk_read => data_count_r[7]~reg0.CLK
clk_read => data_count_r[8]~reg0.CLK
clk_read => data_count_r[9]~reg0.CLK
write => we.IN1
write => always0.IN1
read => always1.IN1
data_write[0] => dual_port_sync:m0.din[0]
data_write[1] => dual_port_sync:m0.din[1]
data_write[2] => dual_port_sync:m0.din[2]
data_write[3] => dual_port_sync:m0.din[3]
data_write[4] => dual_port_sync:m0.din[4]
data_write[5] => dual_port_sync:m0.din[5]
data_write[6] => dual_port_sync:m0.din[6]
data_write[7] => dual_port_sync:m0.din[7]
data_write[8] => dual_port_sync:m0.din[8]
data_write[9] => dual_port_sync:m0.din[9]
data_write[10] => dual_port_sync:m0.din[10]
data_write[11] => dual_port_sync:m0.din[11]
data_write[12] => dual_port_sync:m0.din[12]
data_write[13] => dual_port_sync:m0.din[13]
data_write[14] => dual_port_sync:m0.din[14]
data_write[15] => dual_port_sync:m0.din[15]
data_read[0] <= dual_port_sync:m0.dout[0]
data_read[1] <= dual_port_sync:m0.dout[1]
data_read[2] <= dual_port_sync:m0.dout[2]
data_read[3] <= dual_port_sync:m0.dout[3]
data_read[4] <= dual_port_sync:m0.dout[4]
data_read[5] <= dual_port_sync:m0.dout[5]
data_read[6] <= dual_port_sync:m0.dout[6]
data_read[7] <= dual_port_sync:m0.dout[7]
data_read[8] <= dual_port_sync:m0.dout[8]
data_read[9] <= dual_port_sync:m0.dout[9]
data_read[10] <= dual_port_sync:m0.dout[10]
data_read[11] <= dual_port_sync:m0.dout[11]
data_read[12] <= dual_port_sync:m0.dout[12]
data_read[13] <= dual_port_sync:m0.dout[13]
data_read[14] <= dual_port_sync:m0.dout[14]
data_read[15] <= dual_port_sync:m0.dout[15]
full <= full~reg0.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[0] <= data_count_w[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[1] <= data_count_w[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[2] <= data_count_w[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[3] <= data_count_w[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[4] <= data_count_w[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[5] <= data_count_w[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[6] <= data_count_w[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[7] <= data_count_w[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[8] <= data_count_w[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[9] <= data_count_w[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[0] <= data_count_r[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[1] <= data_count_r[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[2] <= data_count_r[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[3] <= data_count_r[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[4] <= data_count_r[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[5] <= data_count_r[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[6] <= data_count_r[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[7] <= data_count_r[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[8] <= data_count_r[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[9] <= data_count_r[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|camera_test|camera_interface:m0|asyn_fifo:m2|dual_port_sync:m0
clk_r => addr_b_q[0].CLK
clk_r => addr_b_q[1].CLK
clk_r => addr_b_q[2].CLK
clk_r => addr_b_q[3].CLK
clk_r => addr_b_q[4].CLK
clk_r => addr_b_q[5].CLK
clk_r => addr_b_q[6].CLK
clk_r => addr_b_q[7].CLK
clk_r => addr_b_q[8].CLK
clk_r => addr_b_q[9].CLK
clk_w => ram.we_a.CLK
clk_w => ram.waddr_a[9].CLK
clk_w => ram.waddr_a[8].CLK
clk_w => ram.waddr_a[7].CLK
clk_w => ram.waddr_a[6].CLK
clk_w => ram.waddr_a[5].CLK
clk_w => ram.waddr_a[4].CLK
clk_w => ram.waddr_a[3].CLK
clk_w => ram.waddr_a[2].CLK
clk_w => ram.waddr_a[1].CLK
clk_w => ram.waddr_a[0].CLK
clk_w => ram.data_a[15].CLK
clk_w => ram.data_a[14].CLK
clk_w => ram.data_a[13].CLK
clk_w => ram.data_a[12].CLK
clk_w => ram.data_a[11].CLK
clk_w => ram.data_a[10].CLK
clk_w => ram.data_a[9].CLK
clk_w => ram.data_a[8].CLK
clk_w => ram.data_a[7].CLK
clk_w => ram.data_a[6].CLK
clk_w => ram.data_a[5].CLK
clk_w => ram.data_a[4].CLK
clk_w => ram.data_a[3].CLK
clk_w => ram.data_a[2].CLK
clk_w => ram.data_a[1].CLK
clk_w => ram.data_a[0].CLK
clk_w => ram.CLK0
we => ram.we_a.DATAIN
we => ram.WE
din[0] => ram.data_a[0].DATAIN
din[0] => ram.DATAIN
din[1] => ram.data_a[1].DATAIN
din[1] => ram.DATAIN1
din[2] => ram.data_a[2].DATAIN
din[2] => ram.DATAIN2
din[3] => ram.data_a[3].DATAIN
din[3] => ram.DATAIN3
din[4] => ram.data_a[4].DATAIN
din[4] => ram.DATAIN4
din[5] => ram.data_a[5].DATAIN
din[5] => ram.DATAIN5
din[6] => ram.data_a[6].DATAIN
din[6] => ram.DATAIN6
din[7] => ram.data_a[7].DATAIN
din[7] => ram.DATAIN7
din[8] => ram.data_a[8].DATAIN
din[8] => ram.DATAIN8
din[9] => ram.data_a[9].DATAIN
din[9] => ram.DATAIN9
din[10] => ram.data_a[10].DATAIN
din[10] => ram.DATAIN10
din[11] => ram.data_a[11].DATAIN
din[11] => ram.DATAIN11
din[12] => ram.data_a[12].DATAIN
din[12] => ram.DATAIN12
din[13] => ram.data_a[13].DATAIN
din[13] => ram.DATAIN13
din[14] => ram.data_a[14].DATAIN
din[14] => ram.DATAIN14
din[15] => ram.data_a[15].DATAIN
din[15] => ram.DATAIN15
addr_a[0] => ram.waddr_a[0].DATAIN
addr_a[0] => ram.WADDR
addr_a[1] => ram.waddr_a[1].DATAIN
addr_a[1] => ram.WADDR1
addr_a[2] => ram.waddr_a[2].DATAIN
addr_a[2] => ram.WADDR2
addr_a[3] => ram.waddr_a[3].DATAIN
addr_a[3] => ram.WADDR3
addr_a[4] => ram.waddr_a[4].DATAIN
addr_a[4] => ram.WADDR4
addr_a[5] => ram.waddr_a[5].DATAIN
addr_a[5] => ram.WADDR5
addr_a[6] => ram.waddr_a[6].DATAIN
addr_a[6] => ram.WADDR6
addr_a[7] => ram.waddr_a[7].DATAIN
addr_a[7] => ram.WADDR7
addr_a[8] => ram.waddr_a[8].DATAIN
addr_a[8] => ram.WADDR8
addr_a[9] => ram.waddr_a[9].DATAIN
addr_a[9] => ram.WADDR9
addr_b[0] => addr_b_q[0].DATAIN
addr_b[1] => addr_b_q[1].DATAIN
addr_b[2] => addr_b_q[2].DATAIN
addr_b[3] => addr_b_q[3].DATAIN
addr_b[4] => addr_b_q[4].DATAIN
addr_b[5] => addr_b_q[5].DATAIN
addr_b[6] => addr_b_q[6].DATAIN
addr_b[7] => addr_b_q[7].DATAIN
addr_b[8] => addr_b_q[8].DATAIN
addr_b[9] => addr_b_q[9].DATAIN
dout[0] <= ram.DATAOUT
dout[1] <= ram.DATAOUT1
dout[2] <= ram.DATAOUT2
dout[3] <= ram.DATAOUT3
dout[4] <= ram.DATAOUT4
dout[5] <= ram.DATAOUT5
dout[6] <= ram.DATAOUT6
dout[7] <= ram.DATAOUT7
dout[8] <= ram.DATAOUT8
dout[9] <= ram.DATAOUT9
dout[10] <= ram.DATAOUT10
dout[11] <= ram.DATAOUT11
dout[12] <= ram.DATAOUT12
dout[13] <= ram.DATAOUT13
dout[14] <= ram.DATAOUT14
dout[15] <= ram.DATAOUT15


|camera_test|camera_interface:m0|debounce_explicit:m3
clk => timer_reg[0].CLK
clk => timer_reg[1].CLK
clk => timer_reg[2].CLK
clk => timer_reg[3].CLK
clk => timer_reg[4].CLK
clk => timer_reg[5].CLK
clk => timer_reg[6].CLK
clk => timer_reg[7].CLK
clk => timer_reg[8].CLK
clk => timer_reg[9].CLK
clk => timer_reg[10].CLK
clk => timer_reg[11].CLK
clk => timer_reg[12].CLK
clk => timer_reg[13].CLK
clk => timer_reg[14].CLK
clk => timer_reg[15].CLK
clk => timer_reg[16].CLK
clk => timer_reg[17].CLK
clk => timer_reg[18].CLK
clk => timer_reg[19].CLK
clk => timer_reg[20].CLK
clk => state_reg~1.DATAIN
rst_n => timer_reg[0].ACLR
rst_n => timer_reg[1].ACLR
rst_n => timer_reg[2].ACLR
rst_n => timer_reg[3].ACLR
rst_n => timer_reg[4].ACLR
rst_n => timer_reg[5].ACLR
rst_n => timer_reg[6].ACLR
rst_n => timer_reg[7].ACLR
rst_n => timer_reg[8].ACLR
rst_n => timer_reg[9].ACLR
rst_n => timer_reg[10].ACLR
rst_n => timer_reg[11].ACLR
rst_n => timer_reg[12].ACLR
rst_n => timer_reg[13].ACLR
rst_n => timer_reg[14].ACLR
rst_n => timer_reg[15].ACLR
rst_n => timer_reg[16].ACLR
rst_n => timer_reg[17].ACLR
rst_n => timer_reg[18].ACLR
rst_n => timer_reg[19].ACLR
rst_n => timer_reg[20].ACLR
rst_n => state_reg~3.DATAIN
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => db_tick.OUTPUTSELECT
sw => Selector0.IN3
sw => Selector5.IN3
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => Selector0.IN1
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => Selector5.IN1
db_level <= db_level.DB_MAX_OUTPUT_PORT_TYPE
db_tick <= db_tick.DB_MAX_OUTPUT_PORT_TYPE


|camera_test|camera_interface:m0|debounce_explicit:m4
clk => timer_reg[0].CLK
clk => timer_reg[1].CLK
clk => timer_reg[2].CLK
clk => timer_reg[3].CLK
clk => timer_reg[4].CLK
clk => timer_reg[5].CLK
clk => timer_reg[6].CLK
clk => timer_reg[7].CLK
clk => timer_reg[8].CLK
clk => timer_reg[9].CLK
clk => timer_reg[10].CLK
clk => timer_reg[11].CLK
clk => timer_reg[12].CLK
clk => timer_reg[13].CLK
clk => timer_reg[14].CLK
clk => timer_reg[15].CLK
clk => timer_reg[16].CLK
clk => timer_reg[17].CLK
clk => timer_reg[18].CLK
clk => timer_reg[19].CLK
clk => timer_reg[20].CLK
clk => state_reg~1.DATAIN
rst_n => timer_reg[0].ACLR
rst_n => timer_reg[1].ACLR
rst_n => timer_reg[2].ACLR
rst_n => timer_reg[3].ACLR
rst_n => timer_reg[4].ACLR
rst_n => timer_reg[5].ACLR
rst_n => timer_reg[6].ACLR
rst_n => timer_reg[7].ACLR
rst_n => timer_reg[8].ACLR
rst_n => timer_reg[9].ACLR
rst_n => timer_reg[10].ACLR
rst_n => timer_reg[11].ACLR
rst_n => timer_reg[12].ACLR
rst_n => timer_reg[13].ACLR
rst_n => timer_reg[14].ACLR
rst_n => timer_reg[15].ACLR
rst_n => timer_reg[16].ACLR
rst_n => timer_reg[17].ACLR
rst_n => timer_reg[18].ACLR
rst_n => timer_reg[19].ACLR
rst_n => timer_reg[20].ACLR
rst_n => state_reg~3.DATAIN
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => db_tick.OUTPUTSELECT
sw => Selector0.IN3
sw => Selector5.IN3
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => Selector0.IN1
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => Selector5.IN1
db_level <= db_level.DB_MAX_OUTPUT_PORT_TYPE
db_tick <= db_tick.DB_MAX_OUTPUT_PORT_TYPE


|camera_test|camera_interface:m0|debounce_explicit:m5
clk => timer_reg[0].CLK
clk => timer_reg[1].CLK
clk => timer_reg[2].CLK
clk => timer_reg[3].CLK
clk => timer_reg[4].CLK
clk => timer_reg[5].CLK
clk => timer_reg[6].CLK
clk => timer_reg[7].CLK
clk => timer_reg[8].CLK
clk => timer_reg[9].CLK
clk => timer_reg[10].CLK
clk => timer_reg[11].CLK
clk => timer_reg[12].CLK
clk => timer_reg[13].CLK
clk => timer_reg[14].CLK
clk => timer_reg[15].CLK
clk => timer_reg[16].CLK
clk => timer_reg[17].CLK
clk => timer_reg[18].CLK
clk => timer_reg[19].CLK
clk => timer_reg[20].CLK
clk => state_reg~1.DATAIN
rst_n => timer_reg[0].ACLR
rst_n => timer_reg[1].ACLR
rst_n => timer_reg[2].ACLR
rst_n => timer_reg[3].ACLR
rst_n => timer_reg[4].ACLR
rst_n => timer_reg[5].ACLR
rst_n => timer_reg[6].ACLR
rst_n => timer_reg[7].ACLR
rst_n => timer_reg[8].ACLR
rst_n => timer_reg[9].ACLR
rst_n => timer_reg[10].ACLR
rst_n => timer_reg[11].ACLR
rst_n => timer_reg[12].ACLR
rst_n => timer_reg[13].ACLR
rst_n => timer_reg[14].ACLR
rst_n => timer_reg[15].ACLR
rst_n => timer_reg[16].ACLR
rst_n => timer_reg[17].ACLR
rst_n => timer_reg[18].ACLR
rst_n => timer_reg[19].ACLR
rst_n => timer_reg[20].ACLR
rst_n => state_reg~3.DATAIN
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => db_tick.OUTPUTSELECT
sw => Selector0.IN3
sw => Selector5.IN3
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => Selector0.IN1
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => Selector5.IN1
db_level <= db_level.DB_MAX_OUTPUT_PORT_TYPE
db_tick <= db_tick.DB_MAX_OUTPUT_PORT_TYPE


|camera_test|camera_interface:m0|debounce_explicit:m6
clk => timer_reg[0].CLK
clk => timer_reg[1].CLK
clk => timer_reg[2].CLK
clk => timer_reg[3].CLK
clk => timer_reg[4].CLK
clk => timer_reg[5].CLK
clk => timer_reg[6].CLK
clk => timer_reg[7].CLK
clk => timer_reg[8].CLK
clk => timer_reg[9].CLK
clk => timer_reg[10].CLK
clk => timer_reg[11].CLK
clk => timer_reg[12].CLK
clk => timer_reg[13].CLK
clk => timer_reg[14].CLK
clk => timer_reg[15].CLK
clk => timer_reg[16].CLK
clk => timer_reg[17].CLK
clk => timer_reg[18].CLK
clk => timer_reg[19].CLK
clk => timer_reg[20].CLK
clk => state_reg~1.DATAIN
rst_n => timer_reg[0].ACLR
rst_n => timer_reg[1].ACLR
rst_n => timer_reg[2].ACLR
rst_n => timer_reg[3].ACLR
rst_n => timer_reg[4].ACLR
rst_n => timer_reg[5].ACLR
rst_n => timer_reg[6].ACLR
rst_n => timer_reg[7].ACLR
rst_n => timer_reg[8].ACLR
rst_n => timer_reg[9].ACLR
rst_n => timer_reg[10].ACLR
rst_n => timer_reg[11].ACLR
rst_n => timer_reg[12].ACLR
rst_n => timer_reg[13].ACLR
rst_n => timer_reg[14].ACLR
rst_n => timer_reg[15].ACLR
rst_n => timer_reg[16].ACLR
rst_n => timer_reg[17].ACLR
rst_n => timer_reg[18].ACLR
rst_n => timer_reg[19].ACLR
rst_n => timer_reg[20].ACLR
rst_n => state_reg~3.DATAIN
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => db_tick.OUTPUTSELECT
sw => Selector0.IN3
sw => Selector5.IN3
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => Selector0.IN1
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => state_nxt.OUTPUTSELECT
sw => Selector5.IN1
db_level <= db_level.DB_MAX_OUTPUT_PORT_TYPE
db_tick <= db_tick.DB_MAX_OUTPUT_PORT_TYPE


|camera_test|sdram_interface:m1
clk => clk.IN2
rst_n => rst_n.IN2
clk_vga => clk_vga.IN1
rd_en => rd_en.IN1
data_count_r[0] => LessThan0.IN20
data_count_r[1] => LessThan0.IN19
data_count_r[2] => LessThan0.IN18
data_count_r[3] => LessThan0.IN17
data_count_r[4] => LessThan0.IN16
data_count_r[5] => LessThan0.IN15
data_count_r[6] => LessThan0.IN14
data_count_r[7] => LessThan0.IN13
data_count_r[8] => LessThan0.IN12
data_count_r[9] => LessThan0.IN11
f2s_data[0] => f2s_data[0].IN1
f2s_data[1] => f2s_data[1].IN1
f2s_data[2] => f2s_data[2].IN1
f2s_data[3] => f2s_data[3].IN1
f2s_data[4] => f2s_data[4].IN1
f2s_data[5] => f2s_data[5].IN1
f2s_data[6] => f2s_data[6].IN1
f2s_data[7] => f2s_data[7].IN1
f2s_data[8] => f2s_data[8].IN1
f2s_data[9] => f2s_data[9].IN1
f2s_data[10] => f2s_data[10].IN1
f2s_data[11] => f2s_data[11].IN1
f2s_data[12] => f2s_data[12].IN1
f2s_data[13] => f2s_data[13].IN1
f2s_data[14] => f2s_data[14].IN1
f2s_data[15] => f2s_data[15].IN1
f2s_data_valid <= sdram_controller:m0.f2s_data_valid
empty_fifo <= asyn_fifo:m2.empty
dout[0] <= asyn_fifo:m2.data_read
dout[1] <= asyn_fifo:m2.data_read
dout[2] <= asyn_fifo:m2.data_read
dout[3] <= asyn_fifo:m2.data_read
dout[4] <= asyn_fifo:m2.data_read
dout[5] <= asyn_fifo:m2.data_read
dout[6] <= asyn_fifo:m2.data_read
dout[7] <= asyn_fifo:m2.data_read
dout[8] <= asyn_fifo:m2.data_read
dout[9] <= asyn_fifo:m2.data_read
dout[10] <= asyn_fifo:m2.data_read
dout[11] <= asyn_fifo:m2.data_read
dout[12] <= asyn_fifo:m2.data_read
dout[13] <= asyn_fifo:m2.data_read
dout[14] <= asyn_fifo:m2.data_read
dout[15] <= asyn_fifo:m2.data_read
sdram_clk <= sdram_controller:m0.s_clk
sdram_cke <= sdram_controller:m0.s_cke
sdram_cs_n <= sdram_controller:m0.s_cs_n
sdram_ras_n <= sdram_controller:m0.s_ras_n
sdram_cas_n <= sdram_controller:m0.s_cas_n
sdram_we_n <= sdram_controller:m0.s_we_n
sdram_addr[0] <= sdram_controller:m0.s_addr
sdram_addr[1] <= sdram_controller:m0.s_addr
sdram_addr[2] <= sdram_controller:m0.s_addr
sdram_addr[3] <= sdram_controller:m0.s_addr
sdram_addr[4] <= sdram_controller:m0.s_addr
sdram_addr[5] <= sdram_controller:m0.s_addr
sdram_addr[6] <= sdram_controller:m0.s_addr
sdram_addr[7] <= sdram_controller:m0.s_addr
sdram_addr[8] <= sdram_controller:m0.s_addr
sdram_addr[9] <= sdram_controller:m0.s_addr
sdram_addr[10] <= sdram_controller:m0.s_addr
sdram_addr[11] <= sdram_controller:m0.s_addr
sdram_addr[12] <= sdram_controller:m0.s_addr
sdram_ba[0] <= sdram_controller:m0.s_ba
sdram_ba[1] <= sdram_controller:m0.s_ba
sdram_dqm[0] <= sdram_controller:m0.LDQM
sdram_dqm[1] <= sdram_controller:m0.HDQM
sdram_dq[0] <> sdram_controller:m0.s_dq
sdram_dq[1] <> sdram_controller:m0.s_dq
sdram_dq[2] <> sdram_controller:m0.s_dq
sdram_dq[3] <> sdram_controller:m0.s_dq
sdram_dq[4] <> sdram_controller:m0.s_dq
sdram_dq[5] <> sdram_controller:m0.s_dq
sdram_dq[6] <> sdram_controller:m0.s_dq
sdram_dq[7] <> sdram_controller:m0.s_dq
sdram_dq[8] <> sdram_controller:m0.s_dq
sdram_dq[9] <> sdram_controller:m0.s_dq
sdram_dq[10] <> sdram_controller:m0.s_dq
sdram_dq[11] <> sdram_controller:m0.s_dq
sdram_dq[12] <> sdram_controller:m0.s_dq
sdram_dq[13] <> sdram_controller:m0.s_dq
sdram_dq[14] <> sdram_controller:m0.s_dq
sdram_dq[15] <> sdram_controller:m0.s_dq


|camera_test|sdram_interface:m1|sdram_controller:m0
clk => burst_index_q[0].CLK
clk => burst_index_q[1].CLK
clk => burst_index_q[2].CLK
clk => burst_index_q[3].CLK
clk => burst_index_q[4].CLK
clk => burst_index_q[5].CLK
clk => burst_index_q[6].CLK
clk => burst_index_q[7].CLK
clk => burst_index_q[8].CLK
clk => burst_index_q[9].CLK
clk => refresh_flag_q.CLK
clk => s2f_data_valid_q.CLK
clk => s2f_data_q[0].CLK
clk => s2f_data_q[1].CLK
clk => s2f_data_q[2].CLK
clk => s2f_data_q[3].CLK
clk => s2f_data_q[4].CLK
clk => s2f_data_q[5].CLK
clk => s2f_data_q[6].CLK
clk => s2f_data_q[7].CLK
clk => s2f_data_q[8].CLK
clk => s2f_data_q[9].CLK
clk => s2f_data_q[10].CLK
clk => s2f_data_q[11].CLK
clk => s2f_data_q[12].CLK
clk => s2f_data_q[13].CLK
clk => s2f_data_q[14].CLK
clk => s2f_data_q[15].CLK
clk => f2s_data_q[0].CLK
clk => f2s_data_q[1].CLK
clk => f2s_data_q[2].CLK
clk => f2s_data_q[3].CLK
clk => f2s_data_q[4].CLK
clk => f2s_data_q[5].CLK
clk => f2s_data_q[6].CLK
clk => f2s_data_q[7].CLK
clk => f2s_data_q[8].CLK
clk => f2s_data_q[9].CLK
clk => f2s_data_q[10].CLK
clk => f2s_data_q[11].CLK
clk => f2s_data_q[12].CLK
clk => f2s_data_q[13].CLK
clk => f2s_data_q[14].CLK
clk => f2s_data_q[15].CLK
clk => f_addr_q[0].CLK
clk => f_addr_q[1].CLK
clk => f_addr_q[2].CLK
clk => f_addr_q[3].CLK
clk => f_addr_q[4].CLK
clk => f_addr_q[5].CLK
clk => f_addr_q[6].CLK
clk => f_addr_q[7].CLK
clk => f_addr_q[8].CLK
clk => f_addr_q[9].CLK
clk => f_addr_q[10].CLK
clk => f_addr_q[11].CLK
clk => f_addr_q[12].CLK
clk => f_addr_q[13].CLK
clk => f_addr_q[14].CLK
clk => s_ba_q[0].CLK
clk => s_ba_q[1].CLK
clk => rw_en_q.CLK
clk => rw_q.CLK
clk => tri_q.CLK
clk => s_addr_q[0].CLK
clk => s_addr_q[1].CLK
clk => s_addr_q[2].CLK
clk => s_addr_q[3].CLK
clk => s_addr_q[4].CLK
clk => s_addr_q[5].CLK
clk => s_addr_q[6].CLK
clk => s_addr_q[7].CLK
clk => s_addr_q[8].CLK
clk => s_addr_q[9].CLK
clk => s_addr_q[10].CLK
clk => s_addr_q[11].CLK
clk => s_addr_q[12].CLK
clk => refresh_ctr_q[0].CLK
clk => refresh_ctr_q[1].CLK
clk => refresh_ctr_q[2].CLK
clk => refresh_ctr_q[3].CLK
clk => refresh_ctr_q[4].CLK
clk => refresh_ctr_q[5].CLK
clk => refresh_ctr_q[6].CLK
clk => refresh_ctr_q[7].CLK
clk => refresh_ctr_q[8].CLK
clk => refresh_ctr_q[9].CLK
clk => refresh_ctr_q[10].CLK
clk => delay_ctr_q[0].CLK
clk => delay_ctr_q[1].CLK
clk => delay_ctr_q[2].CLK
clk => delay_ctr_q[3].CLK
clk => delay_ctr_q[4].CLK
clk => delay_ctr_q[5].CLK
clk => delay_ctr_q[6].CLK
clk => delay_ctr_q[7].CLK
clk => delay_ctr_q[8].CLK
clk => delay_ctr_q[9].CLK
clk => delay_ctr_q[10].CLK
clk => delay_ctr_q[11].CLK
clk => delay_ctr_q[12].CLK
clk => delay_ctr_q[13].CLK
clk => delay_ctr_q[14].CLK
clk => delay_ctr_q[15].CLK
clk => cmd_q[0].CLK
clk => cmd_q[1].CLK
clk => cmd_q[2].CLK
clk => cmd_q[3].CLK
clk => s_clk.DATAIN
clk => nxt_q~1.DATAIN
clk => state_q~1.DATAIN
rst_n => burst_index_q[0].ACLR
rst_n => burst_index_q[1].ACLR
rst_n => burst_index_q[2].ACLR
rst_n => burst_index_q[3].ACLR
rst_n => burst_index_q[4].ACLR
rst_n => burst_index_q[5].ACLR
rst_n => burst_index_q[6].ACLR
rst_n => burst_index_q[7].ACLR
rst_n => burst_index_q[8].ACLR
rst_n => burst_index_q[9].ACLR
rst_n => refresh_flag_q.ACLR
rst_n => s2f_data_valid_q.ACLR
rst_n => s2f_data_q[0].ACLR
rst_n => s2f_data_q[1].ACLR
rst_n => s2f_data_q[2].ACLR
rst_n => s2f_data_q[3].ACLR
rst_n => s2f_data_q[4].ACLR
rst_n => s2f_data_q[5].ACLR
rst_n => s2f_data_q[6].ACLR
rst_n => s2f_data_q[7].ACLR
rst_n => s2f_data_q[8].ACLR
rst_n => s2f_data_q[9].ACLR
rst_n => s2f_data_q[10].ACLR
rst_n => s2f_data_q[11].ACLR
rst_n => s2f_data_q[12].ACLR
rst_n => s2f_data_q[13].ACLR
rst_n => s2f_data_q[14].ACLR
rst_n => s2f_data_q[15].ACLR
rst_n => f2s_data_q[0].ACLR
rst_n => f2s_data_q[1].ACLR
rst_n => f2s_data_q[2].ACLR
rst_n => f2s_data_q[3].ACLR
rst_n => f2s_data_q[4].ACLR
rst_n => f2s_data_q[5].ACLR
rst_n => f2s_data_q[6].ACLR
rst_n => f2s_data_q[7].ACLR
rst_n => f2s_data_q[8].ACLR
rst_n => f2s_data_q[9].ACLR
rst_n => f2s_data_q[10].ACLR
rst_n => f2s_data_q[11].ACLR
rst_n => f2s_data_q[12].ACLR
rst_n => f2s_data_q[13].ACLR
rst_n => f2s_data_q[14].ACLR
rst_n => f2s_data_q[15].ACLR
rst_n => f_addr_q[0].ACLR
rst_n => f_addr_q[1].ACLR
rst_n => f_addr_q[2].ACLR
rst_n => f_addr_q[3].ACLR
rst_n => f_addr_q[4].ACLR
rst_n => f_addr_q[5].ACLR
rst_n => f_addr_q[6].ACLR
rst_n => f_addr_q[7].ACLR
rst_n => f_addr_q[8].ACLR
rst_n => f_addr_q[9].ACLR
rst_n => f_addr_q[10].ACLR
rst_n => f_addr_q[11].ACLR
rst_n => f_addr_q[12].ACLR
rst_n => f_addr_q[13].ACLR
rst_n => f_addr_q[14].ACLR
rst_n => s_ba_q[0].ACLR
rst_n => s_ba_q[1].ACLR
rst_n => rw_en_q.ACLR
rst_n => rw_q.ACLR
rst_n => tri_q.ACLR
rst_n => s_addr_q[0].ACLR
rst_n => s_addr_q[1].ACLR
rst_n => s_addr_q[2].ACLR
rst_n => s_addr_q[3].ACLR
rst_n => s_addr_q[4].ACLR
rst_n => s_addr_q[5].ACLR
rst_n => s_addr_q[6].ACLR
rst_n => s_addr_q[7].ACLR
rst_n => s_addr_q[8].ACLR
rst_n => s_addr_q[9].ACLR
rst_n => s_addr_q[10].ACLR
rst_n => s_addr_q[11].ACLR
rst_n => s_addr_q[12].ACLR
rst_n => refresh_ctr_q[0].ACLR
rst_n => refresh_ctr_q[1].ACLR
rst_n => refresh_ctr_q[2].ACLR
rst_n => refresh_ctr_q[3].ACLR
rst_n => refresh_ctr_q[4].ACLR
rst_n => refresh_ctr_q[5].ACLR
rst_n => refresh_ctr_q[6].ACLR
rst_n => refresh_ctr_q[7].ACLR
rst_n => refresh_ctr_q[8].ACLR
rst_n => refresh_ctr_q[9].ACLR
rst_n => refresh_ctr_q[10].ACLR
rst_n => delay_ctr_q[0].ACLR
rst_n => delay_ctr_q[1].ACLR
rst_n => delay_ctr_q[2].ACLR
rst_n => delay_ctr_q[3].ACLR
rst_n => delay_ctr_q[4].ACLR
rst_n => delay_ctr_q[5].ACLR
rst_n => delay_ctr_q[6].ACLR
rst_n => delay_ctr_q[7].ACLR
rst_n => delay_ctr_q[8].ACLR
rst_n => delay_ctr_q[9].ACLR
rst_n => delay_ctr_q[10].ACLR
rst_n => delay_ctr_q[11].ACLR
rst_n => delay_ctr_q[12].ACLR
rst_n => delay_ctr_q[13].ACLR
rst_n => delay_ctr_q[14].ACLR
rst_n => delay_ctr_q[15].ACLR
rst_n => cmd_q[0].PRESET
rst_n => cmd_q[1].PRESET
rst_n => cmd_q[2].PRESET
rst_n => cmd_q[3].PRESET
rst_n => nxt_q~3.DATAIN
rst_n => state_q~3.DATAIN
rw => rw_d.DATAB
rw_en => always1.IN1
rw_en => rw_en_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => f_addr_d.OUTPUTSELECT
rw_en => rw_d.OUTPUTSELECT
f_addr[0] => f_addr_d.DATAB
f_addr[1] => f_addr_d.DATAB
f_addr[2] => f_addr_d.DATAB
f_addr[3] => f_addr_d.DATAB
f_addr[4] => f_addr_d.DATAB
f_addr[5] => f_addr_d.DATAB
f_addr[6] => f_addr_d.DATAB
f_addr[7] => f_addr_d.DATAB
f_addr[8] => f_addr_d.DATAB
f_addr[9] => f_addr_d.DATAB
f_addr[10] => f_addr_d.DATAB
f_addr[11] => f_addr_d.DATAB
f_addr[12] => f_addr_d.DATAB
f_addr[13] => f_addr_d.DATAB
f_addr[14] => f_addr_d.DATAB
f2s_data[0] => f2s_data_q[0].DATAIN
f2s_data[1] => f2s_data_q[1].DATAIN
f2s_data[2] => f2s_data_q[2].DATAIN
f2s_data[3] => f2s_data_q[3].DATAIN
f2s_data[4] => f2s_data_q[4].DATAIN
f2s_data[5] => f2s_data_q[5].DATAIN
f2s_data[6] => f2s_data_q[6].DATAIN
f2s_data[7] => f2s_data_q[7].DATAIN
f2s_data[8] => f2s_data_q[8].DATAIN
f2s_data[9] => f2s_data_q[9].DATAIN
f2s_data[10] => f2s_data_q[10].DATAIN
f2s_data[11] => f2s_data_q[11].DATAIN
f2s_data[12] => f2s_data_q[12].DATAIN
f2s_data[13] => f2s_data_q[13].DATAIN
f2s_data[14] => f2s_data_q[14].DATAIN
f2s_data[15] => f2s_data_q[15].DATAIN
s2f_data[0] <= s2f_data_q[0].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[1] <= s2f_data_q[1].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[2] <= s2f_data_q[2].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[3] <= s2f_data_q[3].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[4] <= s2f_data_q[4].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[5] <= s2f_data_q[5].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[6] <= s2f_data_q[6].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[7] <= s2f_data_q[7].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[8] <= s2f_data_q[8].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[9] <= s2f_data_q[9].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[10] <= s2f_data_q[10].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[11] <= s2f_data_q[11].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[12] <= s2f_data_q[12].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[13] <= s2f_data_q[13].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[14] <= s2f_data_q[14].DB_MAX_OUTPUT_PORT_TYPE
s2f_data[15] <= s2f_data_q[15].DB_MAX_OUTPUT_PORT_TYPE
s2f_data_valid <= s2f_data_valid_q.DB_MAX_OUTPUT_PORT_TYPE
f2s_data_valid <= Selector67.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE
s_clk <= clk.DB_MAX_OUTPUT_PORT_TYPE
s_cke <= <VCC>
s_cs_n <= cmd_q[3].DB_MAX_OUTPUT_PORT_TYPE
s_ras_n <= cmd_q[2].DB_MAX_OUTPUT_PORT_TYPE
s_cas_n <= cmd_q[1].DB_MAX_OUTPUT_PORT_TYPE
s_we_n <= cmd_q[0].DB_MAX_OUTPUT_PORT_TYPE
s_addr[0] <= s_addr_q[0].DB_MAX_OUTPUT_PORT_TYPE
s_addr[1] <= s_addr_q[1].DB_MAX_OUTPUT_PORT_TYPE
s_addr[2] <= s_addr_q[2].DB_MAX_OUTPUT_PORT_TYPE
s_addr[3] <= s_addr_q[3].DB_MAX_OUTPUT_PORT_TYPE
s_addr[4] <= s_addr_q[4].DB_MAX_OUTPUT_PORT_TYPE
s_addr[5] <= s_addr_q[5].DB_MAX_OUTPUT_PORT_TYPE
s_addr[6] <= s_addr_q[6].DB_MAX_OUTPUT_PORT_TYPE
s_addr[7] <= s_addr_q[7].DB_MAX_OUTPUT_PORT_TYPE
s_addr[8] <= s_addr_q[8].DB_MAX_OUTPUT_PORT_TYPE
s_addr[9] <= s_addr_q[9].DB_MAX_OUTPUT_PORT_TYPE
s_addr[10] <= s_addr_q[10].DB_MAX_OUTPUT_PORT_TYPE
s_addr[11] <= s_addr_q[11].DB_MAX_OUTPUT_PORT_TYPE
s_addr[12] <= s_addr_q[12].DB_MAX_OUTPUT_PORT_TYPE
s_ba[0] <= s_ba_q[0].DB_MAX_OUTPUT_PORT_TYPE
s_ba[1] <= s_ba_q[1].DB_MAX_OUTPUT_PORT_TYPE
LDQM <= <GND>
HDQM <= <GND>
s_dq[0] <> s_dq[0]
s_dq[1] <> s_dq[1]
s_dq[2] <> s_dq[2]
s_dq[3] <> s_dq[3]
s_dq[4] <> s_dq[4]
s_dq[5] <> s_dq[5]
s_dq[6] <> s_dq[6]
s_dq[7] <> s_dq[7]
s_dq[8] <> s_dq[8]
s_dq[9] <> s_dq[9]
s_dq[10] <> s_dq[10]
s_dq[11] <> s_dq[11]
s_dq[12] <> s_dq[12]
s_dq[13] <> s_dq[13]
s_dq[14] <> s_dq[14]
s_dq[15] <> s_dq[15]


|camera_test|sdram_interface:m1|asyn_fifo:m2
rst_n => full~reg0.ACLR
rst_n => w_ptr_q[0].ACLR
rst_n => w_ptr_q[1].ACLR
rst_n => w_ptr_q[2].ACLR
rst_n => w_ptr_q[3].ACLR
rst_n => w_ptr_q[4].ACLR
rst_n => w_ptr_q[5].ACLR
rst_n => w_ptr_q[6].ACLR
rst_n => w_ptr_q[7].ACLR
rst_n => w_ptr_q[8].ACLR
rst_n => w_ptr_q[9].ACLR
rst_n => w_ptr_q[10].ACLR
rst_n => empty~reg0.PRESET
rst_n => r_ptr_q[0].ACLR
rst_n => r_ptr_q[1].ACLR
rst_n => r_ptr_q[2].ACLR
rst_n => r_ptr_q[3].ACLR
rst_n => r_ptr_q[4].ACLR
rst_n => r_ptr_q[5].ACLR
rst_n => r_ptr_q[6].ACLR
rst_n => r_ptr_q[7].ACLR
rst_n => r_ptr_q[8].ACLR
rst_n => r_ptr_q[9].ACLR
rst_n => r_ptr_q[10].ACLR
rst_n => r_ptr_sync[10].ENA
rst_n => r_ptr_sync[9].ENA
rst_n => r_ptr_sync[8].ENA
rst_n => r_ptr_sync[7].ENA
rst_n => r_ptr_sync[6].ENA
rst_n => r_ptr_sync[5].ENA
rst_n => r_ptr_sync[4].ENA
rst_n => r_ptr_sync[3].ENA
rst_n => r_ptr_sync[2].ENA
rst_n => r_ptr_sync[1].ENA
rst_n => r_ptr_sync[0].ENA
rst_n => data_count_w[9]~reg0.ENA
rst_n => data_count_w[8]~reg0.ENA
rst_n => data_count_w[7]~reg0.ENA
rst_n => data_count_w[6]~reg0.ENA
rst_n => data_count_w[5]~reg0.ENA
rst_n => data_count_w[4]~reg0.ENA
rst_n => data_count_w[3]~reg0.ENA
rst_n => data_count_w[2]~reg0.ENA
rst_n => data_count_w[1]~reg0.ENA
rst_n => data_count_w[0]~reg0.ENA
rst_n => data_count_r[9]~reg0.ENA
rst_n => data_count_r[8]~reg0.ENA
rst_n => data_count_r[7]~reg0.ENA
rst_n => data_count_r[6]~reg0.ENA
rst_n => data_count_r[5]~reg0.ENA
rst_n => data_count_r[4]~reg0.ENA
rst_n => data_count_r[3]~reg0.ENA
rst_n => data_count_r[2]~reg0.ENA
rst_n => data_count_r[1]~reg0.ENA
rst_n => data_count_r[0]~reg0.ENA
clk_write => dual_port_sync:m0.clk_w
clk_write => r_grey_sync[0].CLK
clk_write => r_grey_sync[1].CLK
clk_write => r_grey_sync[2].CLK
clk_write => r_grey_sync[3].CLK
clk_write => r_grey_sync[4].CLK
clk_write => r_grey_sync[5].CLK
clk_write => r_grey_sync[6].CLK
clk_write => r_grey_sync[7].CLK
clk_write => r_grey_sync[8].CLK
clk_write => r_grey_sync[9].CLK
clk_write => r_grey_sync[10].CLK
clk_write => r_grey_sync_temp[0].CLK
clk_write => r_grey_sync_temp[1].CLK
clk_write => r_grey_sync_temp[2].CLK
clk_write => r_grey_sync_temp[3].CLK
clk_write => r_grey_sync_temp[4].CLK
clk_write => r_grey_sync_temp[5].CLK
clk_write => r_grey_sync_temp[6].CLK
clk_write => r_grey_sync_temp[7].CLK
clk_write => r_grey_sync_temp[8].CLK
clk_write => r_grey_sync_temp[9].CLK
clk_write => r_grey_sync_temp[10].CLK
clk_write => data_count_w[0]~reg0.CLK
clk_write => data_count_w[1]~reg0.CLK
clk_write => data_count_w[2]~reg0.CLK
clk_write => data_count_w[3]~reg0.CLK
clk_write => data_count_w[4]~reg0.CLK
clk_write => data_count_w[5]~reg0.CLK
clk_write => data_count_w[6]~reg0.CLK
clk_write => data_count_w[7]~reg0.CLK
clk_write => data_count_w[8]~reg0.CLK
clk_write => data_count_w[9]~reg0.CLK
clk_write => full~reg0.CLK
clk_write => w_ptr_q[0].CLK
clk_write => w_ptr_q[1].CLK
clk_write => w_ptr_q[2].CLK
clk_write => w_ptr_q[3].CLK
clk_write => w_ptr_q[4].CLK
clk_write => w_ptr_q[5].CLK
clk_write => w_ptr_q[6].CLK
clk_write => w_ptr_q[7].CLK
clk_write => w_ptr_q[8].CLK
clk_write => w_ptr_q[9].CLK
clk_write => w_ptr_q[10].CLK
clk_write => r_ptr_sync[0].CLK
clk_write => r_ptr_sync[1].CLK
clk_write => r_ptr_sync[2].CLK
clk_write => r_ptr_sync[3].CLK
clk_write => r_ptr_sync[4].CLK
clk_write => r_ptr_sync[5].CLK
clk_write => r_ptr_sync[6].CLK
clk_write => r_ptr_sync[7].CLK
clk_write => r_ptr_sync[8].CLK
clk_write => r_ptr_sync[9].CLK
clk_write => r_ptr_sync[10].CLK
clk_read => dual_port_sync:m0.clk_r
clk_read => w_grey_sync[0].CLK
clk_read => w_grey_sync[1].CLK
clk_read => w_grey_sync[2].CLK
clk_read => w_grey_sync[3].CLK
clk_read => w_grey_sync[4].CLK
clk_read => w_grey_sync[5].CLK
clk_read => w_grey_sync[6].CLK
clk_read => w_grey_sync[7].CLK
clk_read => w_grey_sync[8].CLK
clk_read => w_grey_sync[9].CLK
clk_read => w_grey_sync[10].CLK
clk_read => w_grey_sync_temp[0].CLK
clk_read => w_grey_sync_temp[1].CLK
clk_read => w_grey_sync_temp[2].CLK
clk_read => w_grey_sync_temp[3].CLK
clk_read => w_grey_sync_temp[4].CLK
clk_read => w_grey_sync_temp[5].CLK
clk_read => w_grey_sync_temp[6].CLK
clk_read => w_grey_sync_temp[7].CLK
clk_read => w_grey_sync_temp[8].CLK
clk_read => w_grey_sync_temp[9].CLK
clk_read => w_grey_sync_temp[10].CLK
clk_read => empty~reg0.CLK
clk_read => r_ptr_q[0].CLK
clk_read => r_ptr_q[1].CLK
clk_read => r_ptr_q[2].CLK
clk_read => r_ptr_q[3].CLK
clk_read => r_ptr_q[4].CLK
clk_read => r_ptr_q[5].CLK
clk_read => r_ptr_q[6].CLK
clk_read => r_ptr_q[7].CLK
clk_read => r_ptr_q[8].CLK
clk_read => r_ptr_q[9].CLK
clk_read => r_ptr_q[10].CLK
clk_read => data_count_r[0]~reg0.CLK
clk_read => data_count_r[1]~reg0.CLK
clk_read => data_count_r[2]~reg0.CLK
clk_read => data_count_r[3]~reg0.CLK
clk_read => data_count_r[4]~reg0.CLK
clk_read => data_count_r[5]~reg0.CLK
clk_read => data_count_r[6]~reg0.CLK
clk_read => data_count_r[7]~reg0.CLK
clk_read => data_count_r[8]~reg0.CLK
clk_read => data_count_r[9]~reg0.CLK
write => we.IN1
write => always0.IN1
read => always1.IN1
data_write[0] => dual_port_sync:m0.din[0]
data_write[1] => dual_port_sync:m0.din[1]
data_write[2] => dual_port_sync:m0.din[2]
data_write[3] => dual_port_sync:m0.din[3]
data_write[4] => dual_port_sync:m0.din[4]
data_write[5] => dual_port_sync:m0.din[5]
data_write[6] => dual_port_sync:m0.din[6]
data_write[7] => dual_port_sync:m0.din[7]
data_write[8] => dual_port_sync:m0.din[8]
data_write[9] => dual_port_sync:m0.din[9]
data_write[10] => dual_port_sync:m0.din[10]
data_write[11] => dual_port_sync:m0.din[11]
data_write[12] => dual_port_sync:m0.din[12]
data_write[13] => dual_port_sync:m0.din[13]
data_write[14] => dual_port_sync:m0.din[14]
data_write[15] => dual_port_sync:m0.din[15]
data_read[0] <= dual_port_sync:m0.dout[0]
data_read[1] <= dual_port_sync:m0.dout[1]
data_read[2] <= dual_port_sync:m0.dout[2]
data_read[3] <= dual_port_sync:m0.dout[3]
data_read[4] <= dual_port_sync:m0.dout[4]
data_read[5] <= dual_port_sync:m0.dout[5]
data_read[6] <= dual_port_sync:m0.dout[6]
data_read[7] <= dual_port_sync:m0.dout[7]
data_read[8] <= dual_port_sync:m0.dout[8]
data_read[9] <= dual_port_sync:m0.dout[9]
data_read[10] <= dual_port_sync:m0.dout[10]
data_read[11] <= dual_port_sync:m0.dout[11]
data_read[12] <= dual_port_sync:m0.dout[12]
data_read[13] <= dual_port_sync:m0.dout[13]
data_read[14] <= dual_port_sync:m0.dout[14]
data_read[15] <= dual_port_sync:m0.dout[15]
full <= full~reg0.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[0] <= data_count_w[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[1] <= data_count_w[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[2] <= data_count_w[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[3] <= data_count_w[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[4] <= data_count_w[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[5] <= data_count_w[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[6] <= data_count_w[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[7] <= data_count_w[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[8] <= data_count_w[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_w[9] <= data_count_w[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[0] <= data_count_r[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[1] <= data_count_r[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[2] <= data_count_r[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[3] <= data_count_r[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[4] <= data_count_r[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[5] <= data_count_r[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[6] <= data_count_r[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[7] <= data_count_r[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[8] <= data_count_r[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_count_r[9] <= data_count_r[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|camera_test|sdram_interface:m1|asyn_fifo:m2|dual_port_sync:m0
clk_r => addr_b_q[0].CLK
clk_r => addr_b_q[1].CLK
clk_r => addr_b_q[2].CLK
clk_r => addr_b_q[3].CLK
clk_r => addr_b_q[4].CLK
clk_r => addr_b_q[5].CLK
clk_r => addr_b_q[6].CLK
clk_r => addr_b_q[7].CLK
clk_r => addr_b_q[8].CLK
clk_r => addr_b_q[9].CLK
clk_w => ram.we_a.CLK
clk_w => ram.waddr_a[9].CLK
clk_w => ram.waddr_a[8].CLK
clk_w => ram.waddr_a[7].CLK
clk_w => ram.waddr_a[6].CLK
clk_w => ram.waddr_a[5].CLK
clk_w => ram.waddr_a[4].CLK
clk_w => ram.waddr_a[3].CLK
clk_w => ram.waddr_a[2].CLK
clk_w => ram.waddr_a[1].CLK
clk_w => ram.waddr_a[0].CLK
clk_w => ram.data_a[15].CLK
clk_w => ram.data_a[14].CLK
clk_w => ram.data_a[13].CLK
clk_w => ram.data_a[12].CLK
clk_w => ram.data_a[11].CLK
clk_w => ram.data_a[10].CLK
clk_w => ram.data_a[9].CLK
clk_w => ram.data_a[8].CLK
clk_w => ram.data_a[7].CLK
clk_w => ram.data_a[6].CLK
clk_w => ram.data_a[5].CLK
clk_w => ram.data_a[4].CLK
clk_w => ram.data_a[3].CLK
clk_w => ram.data_a[2].CLK
clk_w => ram.data_a[1].CLK
clk_w => ram.data_a[0].CLK
clk_w => ram.CLK0
we => ram.we_a.DATAIN
we => ram.WE
din[0] => ram.data_a[0].DATAIN
din[0] => ram.DATAIN
din[1] => ram.data_a[1].DATAIN
din[1] => ram.DATAIN1
din[2] => ram.data_a[2].DATAIN
din[2] => ram.DATAIN2
din[3] => ram.data_a[3].DATAIN
din[3] => ram.DATAIN3
din[4] => ram.data_a[4].DATAIN
din[4] => ram.DATAIN4
din[5] => ram.data_a[5].DATAIN
din[5] => ram.DATAIN5
din[6] => ram.data_a[6].DATAIN
din[6] => ram.DATAIN6
din[7] => ram.data_a[7].DATAIN
din[7] => ram.DATAIN7
din[8] => ram.data_a[8].DATAIN
din[8] => ram.DATAIN8
din[9] => ram.data_a[9].DATAIN
din[9] => ram.DATAIN9
din[10] => ram.data_a[10].DATAIN
din[10] => ram.DATAIN10
din[11] => ram.data_a[11].DATAIN
din[11] => ram.DATAIN11
din[12] => ram.data_a[12].DATAIN
din[12] => ram.DATAIN12
din[13] => ram.data_a[13].DATAIN
din[13] => ram.DATAIN13
din[14] => ram.data_a[14].DATAIN
din[14] => ram.DATAIN14
din[15] => ram.data_a[15].DATAIN
din[15] => ram.DATAIN15
addr_a[0] => ram.waddr_a[0].DATAIN
addr_a[0] => ram.WADDR
addr_a[1] => ram.waddr_a[1].DATAIN
addr_a[1] => ram.WADDR1
addr_a[2] => ram.waddr_a[2].DATAIN
addr_a[2] => ram.WADDR2
addr_a[3] => ram.waddr_a[3].DATAIN
addr_a[3] => ram.WADDR3
addr_a[4] => ram.waddr_a[4].DATAIN
addr_a[4] => ram.WADDR4
addr_a[5] => ram.waddr_a[5].DATAIN
addr_a[5] => ram.WADDR5
addr_a[6] => ram.waddr_a[6].DATAIN
addr_a[6] => ram.WADDR6
addr_a[7] => ram.waddr_a[7].DATAIN
addr_a[7] => ram.WADDR7
addr_a[8] => ram.waddr_a[8].DATAIN
addr_a[8] => ram.WADDR8
addr_a[9] => ram.waddr_a[9].DATAIN
addr_a[9] => ram.WADDR9
addr_b[0] => addr_b_q[0].DATAIN
addr_b[1] => addr_b_q[1].DATAIN
addr_b[2] => addr_b_q[2].DATAIN
addr_b[3] => addr_b_q[3].DATAIN
addr_b[4] => addr_b_q[4].DATAIN
addr_b[5] => addr_b_q[5].DATAIN
addr_b[6] => addr_b_q[6].DATAIN
addr_b[7] => addr_b_q[7].DATAIN
addr_b[8] => addr_b_q[8].DATAIN
addr_b[9] => addr_b_q[9].DATAIN
dout[0] <= ram.DATAOUT
dout[1] <= ram.DATAOUT1
dout[2] <= ram.DATAOUT2
dout[3] <= ram.DATAOUT3
dout[4] <= ram.DATAOUT4
dout[5] <= ram.DATAOUT5
dout[6] <= ram.DATAOUT6
dout[7] <= ram.DATAOUT7
dout[8] <= ram.DATAOUT8
dout[9] <= ram.DATAOUT9
dout[10] <= ram.DATAOUT10
dout[11] <= ram.DATAOUT11
dout[12] <= ram.DATAOUT12
dout[13] <= ram.DATAOUT13
dout[14] <= ram.DATAOUT14
dout[15] <= ram.DATAOUT15


|camera_test|vga_interface:m2
clk => clk.IN1
rst_n => rst_n.IN1
empty_fifo => always1.IN1
din[0] => vga_out_b.DATAB
din[0] => vga_out_b.DATAB
din[1] => vga_out_b.DATAB
din[1] => vga_out_b.DATAB
din[2] => vga_out_b.DATAB
din[2] => vga_out_b.DATAB
din[3] => vga_out_b.DATAB
din[3] => vga_out_b.DATAB
din[4] => vga_out_b.DATAB
din[4] => vga_out_b.DATAB
din[5] => vga_out_g.DATAB
din[5] => vga_out_g.DATAB
din[6] => vga_out_g.DATAB
din[6] => vga_out_g.DATAB
din[7] => vga_out_g.DATAB
din[7] => vga_out_g.DATAB
din[8] => vga_out_g.DATAB
din[8] => vga_out_g.DATAB
din[9] => vga_out_g.DATAB
din[9] => vga_out_g.DATAB
din[10] => vga_out_g.DATAB
din[10] => vga_out_g.DATAB
din[11] => vga_out_r.DATAB
din[11] => vga_out_r.DATAB
din[12] => vga_out_r.DATAB
din[12] => vga_out_r.DATAB
din[13] => vga_out_r.DATAB
din[13] => vga_out_r.DATAB
din[14] => vga_out_r.DATAB
din[14] => vga_out_r.DATAB
din[15] => vga_out_r.DATAB
din[15] => vga_out_r.DATAB
clk_vga <= clk_out.DB_MAX_OUTPUT_PORT_TYPE
rd_en <= Selector19.DB_MAX_OUTPUT_PORT_TYPE
vga_out_r[0] <= Selector7.DB_MAX_OUTPUT_PORT_TYPE
vga_out_r[1] <= Selector6.DB_MAX_OUTPUT_PORT_TYPE
vga_out_r[2] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
vga_out_r[3] <= Selector4.DB_MAX_OUTPUT_PORT_TYPE
vga_out_r[4] <= Selector3.DB_MAX_OUTPUT_PORT_TYPE
vga_out_g[0] <= Selector13.DB_MAX_OUTPUT_PORT_TYPE
vga_out_g[1] <= Selector12.DB_MAX_OUTPUT_PORT_TYPE
vga_out_g[2] <= Selector11.DB_MAX_OUTPUT_PORT_TYPE
vga_out_g[3] <= Selector10.DB_MAX_OUTPUT_PORT_TYPE
vga_out_g[4] <= Selector9.DB_MAX_OUTPUT_PORT_TYPE
vga_out_g[5] <= Selector8.DB_MAX_OUTPUT_PORT_TYPE
vga_out_b[0] <= Selector18.DB_MAX_OUTPUT_PORT_TYPE
vga_out_b[1] <= Selector17.DB_MAX_OUTPUT_PORT_TYPE
vga_out_b[2] <= Selector16.DB_MAX_OUTPUT_PORT_TYPE
vga_out_b[3] <= Selector15.DB_MAX_OUTPUT_PORT_TYPE
vga_out_b[4] <= Selector14.DB_MAX_OUTPUT_PORT_TYPE
vga_out_vs <= vga_core:m0.vsync
vga_out_hs <= vga_core:m0.hsync
vga_out_bl <= vga_core:m0.blank
vga_out_sy <= vga_core:m0.sync


|camera_test|vga_interface:m2|vga_core:m0
clk => hblank_q.CLK
clk => vblank_q.CLK
clk => hsync_q.CLK
clk => vsync_q.CLK
clk => hctr_q[0].CLK
clk => hctr_q[1].CLK
clk => hctr_q[2].CLK
clk => hctr_q[3].CLK
clk => hctr_q[4].CLK
clk => hctr_q[5].CLK
clk => hctr_q[6].CLK
clk => hctr_q[7].CLK
clk => hctr_q[8].CLK
clk => hctr_q[9].CLK
clk => hctr_q[10].CLK
clk => hctr_q[11].CLK
clk => vctr_q[0].CLK
clk => vctr_q[1].CLK
clk => vctr_q[2].CLK
clk => vctr_q[3].CLK
clk => vctr_q[4].CLK
clk => vctr_q[5].CLK
clk => vctr_q[6].CLK
clk => vctr_q[7].CLK
clk => vctr_q[8].CLK
clk => vctr_q[9].CLK
clk => vctr_q[10].CLK
clk => vctr_q[11].CLK
rst_n => hblank_q.ACLR
rst_n => vblank_q.ACLR
rst_n => hsync_q.ACLR
rst_n => vsync_q.ACLR
rst_n => hctr_q[0].ACLR
rst_n => hctr_q[1].ACLR
rst_n => hctr_q[2].ACLR
rst_n => hctr_q[3].ACLR
rst_n => hctr_q[4].ACLR
rst_n => hctr_q[5].ACLR
rst_n => hctr_q[6].ACLR
rst_n => hctr_q[7].ACLR
rst_n => hctr_q[8].ACLR
rst_n => hctr_q[9].ACLR
rst_n => hctr_q[10].ACLR
rst_n => hctr_q[11].ACLR
rst_n => vctr_q[0].ACLR
rst_n => vctr_q[1].ACLR
rst_n => vctr_q[2].ACLR
rst_n => vctr_q[3].ACLR
rst_n => vctr_q[4].ACLR
rst_n => vctr_q[5].ACLR
rst_n => vctr_q[6].ACLR
rst_n => vctr_q[7].ACLR
rst_n => vctr_q[8].ACLR
rst_n => vctr_q[9].ACLR
rst_n => vctr_q[10].ACLR
rst_n => vctr_q[11].ACLR
hsync <= hsync_q.DB_MAX_OUTPUT_PORT_TYPE
vsync <= vsync_q.DB_MAX_OUTPUT_PORT_TYPE
video_on <= always1.DB_MAX_OUTPUT_PORT_TYPE
pixel_x[0] <= hctr_q[0].DB_MAX_OUTPUT_PORT_TYPE
pixel_x[1] <= hctr_q[1].DB_MAX_OUTPUT_PORT_TYPE
pixel_x[2] <= hctr_q[2].DB_MAX_OUTPUT_PORT_TYPE
pixel_x[3] <= hctr_q[3].DB_MAX_OUTPUT_PORT_TYPE
pixel_x[4] <= hctr_q[4].DB_MAX_OUTPUT_PORT_TYPE
pixel_x[5] <= hctr_q[5].DB_MAX_OUTPUT_PORT_TYPE
pixel_x[6] <= hctr_q[6].DB_MAX_OUTPUT_PORT_TYPE
pixel_x[7] <= hctr_q[7].DB_MAX_OUTPUT_PORT_TYPE
pixel_x[8] <= hctr_q[8].DB_MAX_OUTPUT_PORT_TYPE
pixel_x[9] <= hctr_q[9].DB_MAX_OUTPUT_PORT_TYPE
pixel_x[10] <= hctr_q[10].DB_MAX_OUTPUT_PORT_TYPE
pixel_x[11] <= hctr_q[11].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[0] <= vctr_q[0].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[1] <= vctr_q[1].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[2] <= vctr_q[2].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[3] <= vctr_q[3].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[4] <= vctr_q[4].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[5] <= vctr_q[5].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[6] <= vctr_q[6].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[7] <= vctr_q[7].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[8] <= vctr_q[8].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[9] <= vctr_q[9].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[10] <= vctr_q[10].DB_MAX_OUTPUT_PORT_TYPE
pixel_y[11] <= vctr_q[11].DB_MAX_OUTPUT_PORT_TYPE
sync <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
blank <= blank.DB_MAX_OUTPUT_PORT_TYPE


|camera_test|vga_interface:m2|dcm_25MHz:m1
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk


|camera_test|vga_interface:m2|dcm_25MHz:m1|altpll:altpll_component
inclk[0] => dcm_25MHz_altpll:auto_generated.inclk[0]
inclk[1] => dcm_25MHz_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|camera_test|vga_interface:m2|dcm_25MHz:m1|altpll:altpll_component|dcm_25MHz_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|camera_test|dcm_165MHz:m3
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk


|camera_test|dcm_165MHz:m3|altpll:altpll_component
inclk[0] => dcm_165MHz_altpll:auto_generated.inclk[0]
inclk[1] => dcm_165MHz_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|camera_test|dcm_165MHz:m3|altpll:altpll_component|dcm_165MHz_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|camera_test|dcm_25MHz:m4
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk


|camera_test|dcm_25MHz:m4|altpll:altpll_component
inclk[0] => dcm_25MHz_altpll:auto_generated.inclk[0]
inclk[1] => dcm_25MHz_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|camera_test|dcm_25MHz:m4|altpll:altpll_component|dcm_25MHz_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


